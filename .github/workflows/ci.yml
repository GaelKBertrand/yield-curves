# This workflow will install Python dependencies, run tests and lint with the chosen Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and deploy Python package

# Trigger pipeline if commit pushed to master (merge) or during any pull request
# See also: https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-using-multiple-events-with-activity-types-or-configuration
on:
  push:
    branches:
      - master
  pull_request:                                         # Even without configuration `:` must be appended

# Environment variables
env:
  AZURE_FUNCTIONAPP_NAME: flow-functions-test           # Azure Functions app name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './azure-function'   # Azure Functions source folder

jobs:
  # Build package
  build:
    name: Build with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    # Execute several builds with different configurations
    strategy:
      matrix:
        python-version: [3.7]

    # Pipeline steps
    steps:
    - uses: actions/checkout@v2

    # Caching stores the dependencies so that subsequent runs are faster (cache duration: 7 days)
    # Template: https://github.com/actions/cache/blob/master/examples.md#python---pip
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip                                          # pip stores cached files here by default
        key: cache-pip-${{ hashFiles('**/requirements.txt') }}      # Lookup key - if .txt changes new cache will be set up
        restore-keys: |                                             # Fallback lookup key(s) if main key not found in cache
          cache-pip-

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      working-directory: ./yield-curves
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Test with pytest
      working-directory: ./yield-curves
      run: |
        pip install pytest
        pip install pytest pytest-cov
        pip install codecov
        pytest --cov=./ --cov-report=xml --cov-branch --ignore main.py

  # Deployment job (depends on successful completion of the build job)
  deploy-azure-functions:
    name: Deploy to Azure Functions
    runs-on: ubuntu-latest
    needs: build

    # Set environment variables for job
    env:
      python-version: 3.7

    # Pipeline steps
    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: cache-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          cache-pip-

    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ env.python-version }}

    - name: Build package
      working-directory: ./yield-curves
      # Use wheel to create a pre-compiled Python package (saves time later on)
      run: |
        pip install wheel
        python setup.py bdist_wheel --universal

    - name: Resolve Azure Functions dependencies
      # Install entries from Azure Functions requirements file as well as the flow package with pandas backend
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        #     Install package within the dist folder without hardcoding version number:
        #     (instead of `pip install '../dist/flow-0.1.0-py2.py3-none-any.whl'`)
        pip install --target=".python_packages/lib/site-packages" --find-links='../yield-curves/dist/' yield_curves
        popd

    - name: Deploy Azure Functions Action
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONS_PUBLISH_PROFILE }}
